data = read.csv("./data/contrywise_economicdata.csv")
data = read.csv("./data/contrywise_economicdata.csv")
data
data.head(5)
head(data)
model1 = lm(New.cases~population+import+export+GDPperCapita,data=data)
model1 = lm(New.cases~Population+import+export+GDPperCapita,data=data)
model1 = lm(New.cases~Population+Import+Export+GDPperCapita,data=data)
summary(model1)
model1 = lm(New.cases/Population~Import+Export+GDPperCapita,data=data)
summary(model1)
model2 = lm(Deaths...10.Cases~Import+Export+GDPperCapita,data=data)
data = read.csv("./data/contrywise_economicdata.csv")
head(data)
model1 = lm(New.cases/Population~Import+Export+GDPperCapita,data=data)
model2 = lm(Deaths...10.Cases~Import+Export+GDPperCapita,data=data)
model2 = lm(Deathsper100Cases~Import+Export+GDPperCapita,data=data)
model1 = lm(New.cases/Population~Import+Export+GDPperCapita,data=data)
model2 = lm(Deathsper100Cases~Import+Export+GDPperCapita,data=data)
summary(model1)
summary(model1)
model1 = lm(New.cases/Population~Import+Export+GDPperCapita+Inflation,data=data)
model2 = lm(Deathsper100Cases~Import+Export+GDPperCapita+Inflation,data=data)
model3 = lm(Recoveredper100Cases~Import+Export+GDPperCapita+Inflation,data=data)
model4 = lm(Deathsper100Recovered~Import+Export+GDPperCapita+Inflation,data=data)
model4 = lm(Deathsper100Recovered~Import+Export+GDPperCapita+Inflation,data=data)
summary(model1)
summary(model2)
summary(model3)
summary(model1)
summary(model2)
install.packages("umap")
library(umap)
colnames(data)
umap(data[c("GDPchange","GDPperCapita","import","Export","Population")])
data[c("GDPchange","GDPperCapita","import","Export","Population")
data[c("GDPchange","GDPperCapita","import","Export","Population")
data[c("GDPchange","GDPperCapita","import","Export","Population")]
data[:,c("GDPchange","GDPperCapita","import","Export","Population")]
data[,c("GDPchange","GDPperCapita","import","Export","Population")]
colnames(data)
umap(data[c("GDPchange","GDPperCapita","Import","Export","Population")])
umapdata = umap(data[c("GDPchange","GDPperCapita","Import","Export","Population")])
umapdata
umapdata$data
umapdata$layout
ggplot(aes(x=umapdata$layout[,1],y=umapdata$layout[,2]))+geom_points()
library(ggplot2)
ggplot(aes(x=umapdata$layout[,1],y=umapdata$layout[,2]))+geom_points()
colnames(umapdata) = c("umap1","umap2")
umapdata = data.frame(umapResult$layout)
colnames(umapdata) = c("umap1","umap2")
umapdata = data.frame(umapResult$layout)
umapResult = umap(data[c("GDPchange","GDPperCapita","Import","Export","Population")])
umapdata = data.frame(umapResult$layout)
colnames(umapdata) = c("umap1","umap2")
umapdata %>%
ggplot(aes(x=umap1,y=umap2))+geom_points()
library(tidyverse)
umapdata %>%
ggplot(aes(x=umap1,y=umap2))+geom_points()
umapdata %>%
ggplot(aes(x=umap1,y=umap2))+geom_point()
umapResult = umap(data[c("GDPchange","GDPperCapita","Import","Export","Population")])
umapdata = data.frame(umapResult$layout)
colnames(umapdata) = c("umap1","umap2")
umapdata %>%
ggplot(aes(x=umap1,y=umap2))+geom_point()
umapResult = umap(data[c("GDPchange","GDPperCapita","Import","Export","Population")])
umapdata = data.frame(umapResult$layout)
colnames(umapdata) = c("umap1","umap2")
umapdata %>%
ggplot(aes(x=umap1,y=umap2))+geom_point()
data[c("GDPchange","GDPperCapita","Import","Export","Population")]
scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")])
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = data.frame(umapResult$layout)
umapdata = data.frame(umapResult$layout)
colnames(umapdata) = c("umap1","umap2")
colnames(umapdata) = c("umap1","umap2")
umapdata %>%
ggplot(aes(x=umap1,y=umap2))+geom_point()
umapdata = cbind(data[c("Country","WHO Region")],data.frame(umapResult$layout))
colnames(data)
umapdata = cbind(data[c("Country","WHO.Region")],data.frame(umapResult$layout))
colnames(umapdata) = c("umap1","umap2")
umapdata %>%
ggplot(aes(x=umap1,y=umap2))+geom_point()
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","umap1","umap2")
umapdata %>%
ggplot(aes(x=umap1,y=umap2))+geom_point()
umapdata %>%
ggplot(aes(x=umap1,y=umap2))+geom_point(color=WHO.Region)
umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region))+geom_point()
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),5)
km$cluster
umapdata = cbind(umapdata,"cluster"= km$cluster)
umapdata
umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=cluster))+geom_point()
umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster)))+geom_point() +
```
umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster)))+geom_point()
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster)))+geom_point()
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","umap1","umap2")
umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region))+geom_point()
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster)))+geom_point()
summary(model1)
summary(model1)$Coefficients
summary(model1)
summary(model1)[1]
summary(model1)[2]
summary(model1)[3]
summary(model1)[4]
summary(model1)[4]
summary(model2)[4]
summary(model3)[4]
summary(model1)[4]
summary(model2)[4]
summary(model3)[4]
summary(model1)[4]
summary(model2)[4]
summary(model3)[4]
summary(model1)[4]
gridExtra::grid.arrange(p1,p2)
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) + geom_point()
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) + geom_point()
gridExtra::grid.arrange(p1,p2)
gridExtra::grid.arrange(p1,p2.byrow=TRUE)
gridExtra::grid.arrange(p1,p2.grobs=c(1,2))
gridExtra::grid.arrange(p1,p2.c(1,2))
gridExtra::grid.arrange(p1,p2,c(1,2))
gridExtra::grid.arrange(p1,p2,nrow=1)
png("clusterandumap.png", width=800, height=600)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) + geom_point()
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) + geom_point()
gridExtra::grid.arrange(p1,p2,nrow=1)
dev.off()
png("./fig/clusterandumap.png", width=800, height=600)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) + geom_point()
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) + geom_point()
gridExtra::grid.arrange(p1,p2,nrow=1)
dev.off()
png("./fig/clusterandumap.png", width=1000, height=600)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) + geom_point()
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) + geom_point()
gridExtra::grid.arrange(p1,p2,nrow=1)
dev.off()
png("./fig/clusterandumap.png", width=1000, height=600)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p1,p2,nrow=1)
dev.off()
summary(model1)[4][,4]
summary(model1)[4][4]
summary(model1)[4]
summary(model1)$coefficients
summary(model1)$coefficients[4]
summary(model1)$coefficients[4,1]
summary(model1)$coefficients[:,4]
summary(model1)$coefficients[,4]
rbind(summary(model1)$coefficients[,4],
summary(model2)$coefficients[,4],
summary(model3)$coefficients[,4])
index(result_model) = c("New Cases","Deaths Per 100 Cases","Recovered per 100 Cases")
result_model = rbind(summary(model1)$coefficients[,4],
summary(model2)$coefficients[,4],
summary(model3)$coefficients[,4])
index(result_model) = c("New Cases","Deaths Per 100 Cases","Recovered per 100 Cases")
row.names(result_model) = c("New Cases","Deaths Per 100 Cases","Recovered per 100 Cases")
result_model
knitr::include_graphics("./figure/Death_Recovered_record_daywise.png")
R.home
R.home()
install.packages('tinytex')
tinytex::install_tinytex()
tinytex::tinytex_root()
tinytex::tinytex_root()
tinytex
library(tinytex)
tinytex_root()
knitr::include_graphics("./figure/Covid_Daily_Report.png")
knitr::include_graphics("./figure/Death_Recovered_record_countrywise.png")
knitr::include_graphics("./figure/Death_Recoverd_record_countrywise.png")
knitr::include_graphics("./figure/Death_Recoverd_record_contrywise.png")
knitr::include_graphics("./figure/Death_Recoverd_record_contrywise.png")
knitr::include_graphics("./figure/Death_Recoverd_record_contrywise.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(umap)
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p1,p2)
gridExtra::grid.arrange(p1,p2,nrow=1)
data
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region""New.cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region""New cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
colnames(data)
umapdata = cbind(data[c("Country","WHO.Region""New.cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
colnames(data)[15]
colnames(data)[15] = "New cases"
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
colnames(data)[15] = "New cases"
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region""New cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
colnames(data)[15] = "New cases"
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region","New cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=New cases)) +
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=New_cases)) +
geom_point() +
theme(legend.position = "bottom")
p3
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
colnames(data)[15] = "New_cases"
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region","New_cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=New_cases)) +
geom_point() +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p1,p2,p3,nrow=1)
colnames(umapdata) = c("Country","WHO.Region","New_cases","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=New_cases)) +
geom_point() +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p1,p2,p3,nrow=1)
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
colnames(data)[15] = "New_cases"
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
colnames(data)[15] = "New_cases"
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region","New_cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","New_cases","Deaths","Recovered","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=New_case)) +
geom_point() +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p1,p2,p3,nrow=1)
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
colnames(data)[15] = "New_cases"
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region","New_cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","New_cases","Deaths","Recovered","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=New_cases)) +
geom_point() +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p1,p2,p3,nrow=1)
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
colnames(data)[15] = "New_cases"
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region","New_cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","New_cases","Deaths","Recovered","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=Deaths)) +
geom_point() +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p1,p2,p3,nrow=1)
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
colnames(data)[15] = "New_cases"
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region","New_cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","New_cases","Deaths","Recovered","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=WHO.Region)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=factor(cluster))) +
geom_point() +
theme(legend.position = "bottom")
p3 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=Recovered)) +
geom_point() +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p1,p2,p3,nrow=1)
data = read.csv("../derived_data/contrywise_economicdata.csv")
library(tidyverse)
library(ggplot2)
library(umap)
data = read.csv("../derived_data/contrywise_economicdata.csv")
colnames(data)[15] = "New_cases"
umapResult = umap(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]))
umapdata = cbind(data[c("Country","WHO.Region","New_cases","Deathsper100Cases","Recoveredper100Cases")],data.frame(umapResult$layout))
colnames(umapdata) = c("Country","WHO.Region","New_cases","Deaths","Recovered","umap1","umap2")
km = kmeans(scale(data[c("GDPchange","GDPperCapita","Import","Export","Population")]),6)
umapdata = cbind(umapdata,"cluster"= km$cluster)
p1 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=Recovered)) +
geom_point() +
theme(legend.position = "bottom")
p2 = umapdata %>%
ggplot(aes(x=umap1,y=umap2,color=Deaths)) +
geom_point() +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p1,p2,nrow=1)
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap.png")
knitr::include_graphics("./figure/clusterandumap2.png")
knitr::include_graphics("./figure/clusterandumap2.png")
knitr::include_graphics("./figure/clusterandumap2.png")
knitr::include_graphics("./figure/clusterandumap2.png")
knitr::include_graphics("./figure/clusterandumap2.png")
knitr::include_graphics("./figure/clusterandumap2.png")
knitr::include_graphics("./figure/clusterandumap2.png")
data = read.csv("./table/result_lm.csv")
kable(data, format = "html", caption = "My Table Caption")
knitr::kable(data, format = "html", caption = "My Table Caption")
data = read.csv("./table/result_lm.csv")
knitr::kable(data, format = "html", caption = "My Table Caption")
data = read.csv("./table/result_lm.csv")
knitr::kable(data, format = "html", caption = "My Table Caption")
data = read.csv("./table/result_lm.csv")
knitr::kable(data, format = "html", caption = "My Table Caption")
data = read.csv("./table/result_lm.csv")
knitr::kable(data,  caption = "My Table Caption")
data
print(data)
data = read.csv("./table/result_lm.csv")
print(data)
data = read.csv("./table/result_lm.csv")
print(data)
